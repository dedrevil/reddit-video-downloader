{"dependencies":[{"name":"C:\\projects\\reddit-video-downloader\\package.json","includedInParent":true,"mtime":1534764297088},{"name":"C:\\projects\\reddit-video-downloader\\node_modules\\json-find\\package.json","includedInParent":true,"mtime":1534764278918}],"generated":{"js":"/* \n    JSON-Find\nSmall utility for searching through JSON or a JSON-compatible object for values at\ngiven keys.  \n*/\n\n'use strict';\n\n/**** JSON document ***\n    \"this\" assumes an Object or Array */\nconst JSON_DATA = Object.create({}, {\n    checkKey: {\n        configurable: false,\n        enumerable: false,\n        /* object at given key or false */\n        value: function(key){\n            return reduceJSON(false, this, (n, m) => m, key);\n        }\n    },\n    findValues: {\n        configurable: false,\n        enumerable: false,\n        /* object at given key or false */\n        value: function(...keys){\n            return findValues(this, ...keys);\n        }\n    },\n    extractPaths: {\n        configurable: false,\n        enumerable: false,\n        /* extract objects at given paths */\n        value: function(useNewKeys, ...keys){\n            return extractPaths(this, useNewKeys, ...keys);\n        }\n    }\n});\n\n\n/*** Constructor *** \n    JsonFind will return Atoms as is, Arrays & Objects are\n    converted to JsonFind Object */\nfunction JsonFind(doc){\n    const possibleJson = JSON.stringify(doc);\n    \n    if(possibleJson === undefined){\n        throw new Error('Object is invalid JSON');\n    \n    } else if(isAtom(doc) || doc === null){\n        return doc;\n    \n    } else {\n        return Object.assign(Object.create(JSON_DATA), doc);   \n    }\n}\n\nlet assignments = (() => {\n    Object.assign(JsonFind, { prototype: JSON_DATA });\n})();\n\nmodule.exports = JsonFind;\n    \n\n/*** JSON_DATA methods ***/\n\n/* Object, ...String -> Object\n    searches through an object for all given keys,\n    return an object of search keys & their values  */\nfunction findValues(toSearch, ...searchFor){\n    const searchesLen = searchFor.length;\n    let results = {};\n    let searches = {};\n    \n    for(let i = 0; i < searchesLen; i++){\n        searches[searchFor[i]] = true;\n    }\n    \n \n    /* Object, Object -> Void */\n    function traverseObject(toSearchObj, searchForObj){\n        const allKeys = Object.keys(toSearchObj);\n        const len = allKeys.length;\n        \n        for(let i = 0; i < len; i++){\n            const key = allKeys[i];\n            const val = toSearchObj[key];\n            \n            if(searchForObj[key] && !results[key]){\n                results[key] = val;\n\n            } else if(isObject(val)){\n                traverseObject(val, searchForObj);\n\n            } else if(isArray(val)){\n                traverseArray(val, searchForObj);\n            }\n        }\n    }\n\n    /* Array, Object -> Void */\n    function traverseArray(arr, searchForObj){\n        const len = arr.length;\n\n        for(let i = 0; i < len; i++){\n            const item = arr[i];\n\n            if(isArray(item)){\n                traverseArray(item, searchForObj);\n\n            } else if(isObject(item)){\n                traverseObject(item, searchForObj);\n            }\n        }\n    }\n        \n    traverseObject(toSearch, searches);\n    \n    return results;\n}\n\n/* applies function to value at given key */\nfunction reduceJSON(accum, json, fn, searchFor){\n    if(isKey(json, searchFor)){\n        return fn(accum, json[searchFor]);\n        \n    } else if(isAtom(json)){\n        return accum;\n        \n    } else if(isArray(json)){\n        return json.reduce((acc, item) => {\n            return reduceJSON(acc, item, fn, searchFor);\n        }, accum);\n        \n    } else {\n        const keys = Object.keys(json);\n        \n        return keys.reduce((acc, key) => {\n            return reduceJSON(acc, json[key], fn, searchFor);\n        }, accum);\n    }\n}\n\n/* Object, Array-of-String, ...Array-of-String -> Object \n    extracts values from an object from multiples paths: \n    a Path is [...String] \n    assumes newKeys is false or [...String] */\nfunction extractPaths(obj, newKeys, ...paths){\n    const nkLen = newKeys.length;\n    const pLen = paths.length;\n    \n    const curried = curry(assignKeysAtPaths, obj, newKeys, paths);\n\n    return nkLen > pLen ?\n        curried(nkLen) : curried(pLen);\n}\n\n\n/*** Helpers ***/\n\n/* JSON, [...String], [...[...String]], Number -> Object */\nfunction assignKeysAtPaths(obj, newKeys, paths, loopLen){\n    let result = {};\n    \n    for(let i = 0; i < loopLen; i++){\n        // allows for unequal newKeys/paths lengths\n        const iPath = paths[i] ? \n            paths[i] : null;\n        const iNewKey = newKeys[i] ? \n            newKeys[i] : paths[i].slice(-1);\n        \n        const objAtPath = iPath === null ? \n            null : recurPath(obj, iPath);\n        const key = objAtPath ? \n            Object.keys(objAtPath)[0] : null;\n\n        const curried = curry(Object.assign, result);\n\n        // prevent same keys from overriding\n        if(newKeys){\n            if(objAtPath){\n                curried({ [iNewKey]: objAtPath[key] });\n            } else {\n                curried({ [iNewKey]: objAtPath });\n            }\n\n        } else if(key in result){\n            curried({ [key + '+' + i]: objAtPath[key] });\n        \n        } else {\n            curried(objAtPath);\n        }\n    }\n\n    return result;\n}\n\n/* Object, Array-of-String -> Object\n    retrieves the value of an object at the given path\n    returns { String-X: object }\n    where String-X is the key from the last index of \n    the given array */\nfunction recurPath(obj, arr, lastKey=''){\n    if(arr.length === 0){\n        return { [lastKey]: obj };\n    } else {\n        return recurPath(obj[arr[0]], arr.slice(1), arr[0]);\n    }\n}\n\n/* [[...X -> Y], ...X -> [...Y -> Z]] -> Z */\nfunction curry(fn, ...firstArgs){\n    return function(...secondArgs){\n        return fn.apply(null, firstArgs.concat(secondArgs));\n    }\n}\n\nfunction isAtom(v){\n    return (\n        null === v ||\n        typeof(v) === 'boolean' ||\n        typeof(v) === 'number' ||\n        typeof(v) === 'string'\n    );\n}\n\nfunction isArray(v){\n    return Array.isArray(v);\n}\n\nfunction isObject(v){\n    return typeof(v) === 'object' && !isArray(v);\n}\n\nfunction isNull(v){\n    return null === v ? \n        \"null\" : v;\n}\n\nfunction isCompound(v){\n   return isArray(v) || isObject(v); \n}\n\nfunction isKey(json, searchFor){\n    return json === null ?\n        false : isCompound(json) && searchFor in json;\n}\n","map":{"mappings":[{"source":"node_modules\\json-find\\json-find.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules\\json-find\\json-find.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}}],"sources":{"node_modules\\json-find\\json-find.js":"/* \n    JSON-Find\nSmall utility for searching through JSON or a JSON-compatible object for values at\ngiven keys.  \n*/\n\n'use strict';\n\n/**** JSON document ***\n    \"this\" assumes an Object or Array */\nconst JSON_DATA = Object.create({}, {\n    checkKey: {\n        configurable: false,\n        enumerable: false,\n        /* object at given key or false */\n        value: function(key){\n            return reduceJSON(false, this, (n, m) => m, key);\n        }\n    },\n    findValues: {\n        configurable: false,\n        enumerable: false,\n        /* object at given key or false */\n        value: function(...keys){\n            return findValues(this, ...keys);\n        }\n    },\n    extractPaths: {\n        configurable: false,\n        enumerable: false,\n        /* extract objects at given paths */\n        value: function(useNewKeys, ...keys){\n            return extractPaths(this, useNewKeys, ...keys);\n        }\n    }\n});\n\n\n/*** Constructor *** \n    JsonFind will return Atoms as is, Arrays & Objects are\n    converted to JsonFind Object */\nfunction JsonFind(doc){\n    const possibleJson = JSON.stringify(doc);\n    \n    if(possibleJson === undefined){\n        throw new Error('Object is invalid JSON');\n    \n    } else if(isAtom(doc) || doc === null){\n        return doc;\n    \n    } else {\n        return Object.assign(Object.create(JSON_DATA), doc);   \n    }\n}\n\nlet assignments = (() => {\n    Object.assign(JsonFind, { prototype: JSON_DATA });\n})();\n\nmodule.exports = JsonFind;\n    \n\n/*** JSON_DATA methods ***/\n\n/* Object, ...String -> Object\n    searches through an object for all given keys,\n    return an object of search keys & their values  */\nfunction findValues(toSearch, ...searchFor){\n    const searchesLen = searchFor.length;\n    let results = {};\n    let searches = {};\n    \n    for(let i = 0; i < searchesLen; i++){\n        searches[searchFor[i]] = true;\n    }\n    \n \n    /* Object, Object -> Void */\n    function traverseObject(toSearchObj, searchForObj){\n        const allKeys = Object.keys(toSearchObj);\n        const len = allKeys.length;\n        \n        for(let i = 0; i < len; i++){\n            const key = allKeys[i];\n            const val = toSearchObj[key];\n            \n            if(searchForObj[key] && !results[key]){\n                results[key] = val;\n\n            } else if(isObject(val)){\n                traverseObject(val, searchForObj);\n\n            } else if(isArray(val)){\n                traverseArray(val, searchForObj);\n            }\n        }\n    }\n\n    /* Array, Object -> Void */\n    function traverseArray(arr, searchForObj){\n        const len = arr.length;\n\n        for(let i = 0; i < len; i++){\n            const item = arr[i];\n\n            if(isArray(item)){\n                traverseArray(item, searchForObj);\n\n            } else if(isObject(item)){\n                traverseObject(item, searchForObj);\n            }\n        }\n    }\n        \n    traverseObject(toSearch, searches);\n    \n    return results;\n}\n\n/* applies function to value at given key */\nfunction reduceJSON(accum, json, fn, searchFor){\n    if(isKey(json, searchFor)){\n        return fn(accum, json[searchFor]);\n        \n    } else if(isAtom(json)){\n        return accum;\n        \n    } else if(isArray(json)){\n        return json.reduce((acc, item) => {\n            return reduceJSON(acc, item, fn, searchFor);\n        }, accum);\n        \n    } else {\n        const keys = Object.keys(json);\n        \n        return keys.reduce((acc, key) => {\n            return reduceJSON(acc, json[key], fn, searchFor);\n        }, accum);\n    }\n}\n\n/* Object, Array-of-String, ...Array-of-String -> Object \n    extracts values from an object from multiples paths: \n    a Path is [...String] \n    assumes newKeys is false or [...String] */\nfunction extractPaths(obj, newKeys, ...paths){\n    const nkLen = newKeys.length;\n    const pLen = paths.length;\n    \n    const curried = curry(assignKeysAtPaths, obj, newKeys, paths);\n\n    return nkLen > pLen ?\n        curried(nkLen) : curried(pLen);\n}\n\n\n/*** Helpers ***/\n\n/* JSON, [...String], [...[...String]], Number -> Object */\nfunction assignKeysAtPaths(obj, newKeys, paths, loopLen){\n    let result = {};\n    \n    for(let i = 0; i < loopLen; i++){\n        // allows for unequal newKeys/paths lengths\n        const iPath = paths[i] ? \n            paths[i] : null;\n        const iNewKey = newKeys[i] ? \n            newKeys[i] : paths[i].slice(-1);\n        \n        const objAtPath = iPath === null ? \n            null : recurPath(obj, iPath);\n        const key = objAtPath ? \n            Object.keys(objAtPath)[0] : null;\n\n        const curried = curry(Object.assign, result);\n\n        // prevent same keys from overriding\n        if(newKeys){\n            if(objAtPath){\n                curried({ [iNewKey]: objAtPath[key] });\n            } else {\n                curried({ [iNewKey]: objAtPath });\n            }\n\n        } else if(key in result){\n            curried({ [key + '+' + i]: objAtPath[key] });\n        \n        } else {\n            curried(objAtPath);\n        }\n    }\n\n    return result;\n}\n\n/* Object, Array-of-String -> Object\n    retrieves the value of an object at the given path\n    returns { String-X: object }\n    where String-X is the key from the last index of \n    the given array */\nfunction recurPath(obj, arr, lastKey=''){\n    if(arr.length === 0){\n        return { [lastKey]: obj };\n    } else {\n        return recurPath(obj[arr[0]], arr.slice(1), arr[0]);\n    }\n}\n\n/* [[...X -> Y], ...X -> [...Y -> Z]] -> Z */\nfunction curry(fn, ...firstArgs){\n    return function(...secondArgs){\n        return fn.apply(null, firstArgs.concat(secondArgs));\n    }\n}\n\nfunction isAtom(v){\n    return (\n        null === v ||\n        typeof(v) === 'boolean' ||\n        typeof(v) === 'number' ||\n        typeof(v) === 'string'\n    );\n}\n\nfunction isArray(v){\n    return Array.isArray(v);\n}\n\nfunction isObject(v){\n    return typeof(v) === 'object' && !isArray(v);\n}\n\nfunction isNull(v){\n    return null === v ? \n        \"null\" : v;\n}\n\nfunction isCompound(v){\n   return isArray(v) || isObject(v); \n}\n\nfunction isKey(json, searchFor){\n    return json === null ?\n        false : isCompound(json) && searchFor in json;\n}\n"},"lineCount":246}},"hash":"9da36836dbb1612629864dccbf6d88bc","cacheData":{"env":{}}}